<!-- 
    Url, recibir parametros 
 "/counter/{vParameter?}" parametro opcional
 "/counter/{vParameter}" parametro requerido
-->
@page "/counter/{vParameter?}"
<!-- 
    Injectar dependecia 
//inspeccion de lo que pasa
-->
@inject ILogger<Counter> logger; 

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>
Moduletitle: 
<ModuleTitle title="Titulo: Archivo componente compartido"> </ModuleTitle>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    [Parameter]
    public string? vParameter { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public string? vQuery { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        //if (parameters.TryGetValue<string>(nameof(vParameter), out var value))
        if (parameters.TryGetValue<string>("vParameter", out var value))
        {
            if (value is not null)
                vParameter = value;
        }

        await base.SetParametersAsync(parameters);
    }

    protected override void OnParametersSet()
    {

        logger.LogInformation("Se envia los parametros");
    }

    protected override void OnInitialized()
    {
        //currentCount = vParameter!= null ? int.Parse(vParameter) : 0;
        //currentCount = vParameter != null ? int.Parse(vParameter) : 0;
        currentCount = vQuery != null ? int.Parse(vQuery) : 0;
        logger.LogInformation("Se inicia el componente");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        logger.LogInformation("Esto es depues de inicias el componete");
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
